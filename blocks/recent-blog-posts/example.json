{
    "items": [
        {
            "path": "/content/dam/the-blog/articles/ux-review-presentations",
            "title": "UX review presentations",
            "description": "Creating compelling UX presentations that wow stakeholders.",
            "id": "c921ef4a-d256-44dc-9367-4e0b478c82c9",
            "created": {
                "at": "2025-10-22T14:47:21.437Z",
                "by": "kkalanta@adobe.com",
                "fullName": "Karolis Kalanta"
            },
            "modified": {
                "at": "2025-10-22T14:47:21.446Z",
                "by": "kkalanta@adobe.com",
                "fullName": "Karolis Kalanta"
            },
            "status": "DRAFT",
            "fields": [
                {
                    "name": "title",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "UX review presentations"
                    ]
                },
                {
                    "name": "author",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Editorial Team"
                    ]
                },
                {
                    "name": "publishedDate",
                    "type": "date",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "2023-01-01"
                    ]
                },
                {
                    "name": "heroImage",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "https://images.unsplash.com/photo-1497366216548-37526070297c?w=800"
                    ]
                },
                {
                    "name": "body",
                    "type": "long-text",
                    "multiple": false,
                    "locked": false,
                    "mimeType": "text/html",
                    "values": [
                        "Creating compelling UX presentations is both an art and a science. Whether you're presenting to colleagues or senior leadership, your ability to communicate design decisions effectively can make or break a project. The key is understanding that you're not just showing screens—you're telling a story about how your design solves real problems for real users. Start by framing the context: what problem are you solving, and why does it matter? Use data and user research to build credibility early. When presenting designs, focus on the journey rather than individual screens. Walk your audience through user flows, explaining the reasoning behind each decision. Highlight how your design aligns with business goals while serving user needs. Visual hierarchy in your presentation matters as much as in your designs. Use clear section breaks, limit text on slides, and let your designs speak for themselves. Anticipate questions and objections—prepare backup slides with alternative approaches or deeper dives into specific features. Practice your timing; a rushed presentation loses impact. End with clear next steps and success metrics. Remember, confidence comes from preparation, and preparation means knowing your work inside and out. The best presentations don't just showcase solutions—they demonstrate how you think, how you collaborate, and how you balance user needs with business constraints. Make every slide count, every word purposeful, and every design decision defensible."
                    ]
                },
                {
                    "name": "tags",
                    "type": "tag",
                    "multiple": true,
                    "locked": false,
                    "values": [
                        "blog:Presentation",
                        "blog:Design",
                        "blog:Research"
                    ]
                },
                {
                    "name": "readingTimeMinutes",
                    "type": "number",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        6
                    ]
                },
                {
                    "name": "category",
                    "type": "enumeration",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Design"
                    ]
                }
            ],
            "variations": [],
            "tags": [],
            "references": [],
            "model": {
                "id": "L2NvbmYvZ2xvYmFsL3NldHRpbmdzL2RhbS9jZm0vbW9kZWxzL2Jsb2ctYXJ0aWNsZQ",
                "path": "/conf/global/settings/dam/cfm/models/blog-article",
                "name": "Blog Article",
                "title": "Blog Article",
                "description": "Content Fragment Model for blog posts used by THE BLOG site."
            },
            "validationStatus": [],
            "fieldTags": [
                {
                    "id": "blog:Design",
                    "i18n": []
                },
                {
                    "id": "blog:Research",
                    "i18n": []
                },
                {
                    "id": "blog:Presentation",
                    "i18n": []
                }
            ],
            "etag": "\"2c79cd0fbd885eef3434ec41f7eeeacc\""
        },
        {
            "path": "/content/dam/the-blog/articles/migrating-to-linear-101",
            "title": "Migrating to Linear 101",
            "description": "How Linear streamlines software projects, sprints, and bug tracking.",
            "id": "0564c6ad-ac50-4ef7-b7a5-1e21104bc833",
            "created": {
                "at": "2025-10-22T15:18:54.846Z",
                "by": "kkalanta@adobe.com",
                "fullName": "Karolis Kalanta"
            },
            "modified": {
                "at": "2025-10-22T15:18:54.949Z",
                "by": "kkalanta@adobe.com",
                "fullName": "Karolis Kalanta"
            },
            "status": "DRAFT",
            "fields": [
                {
                    "name": "title",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Migrating to Linear 101"
                    ]
                },
                {
                    "name": "author",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Editorial Team"
                    ]
                },
                {
                    "name": "publishedDate",
                    "type": "date",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "2023-01-02"
                    ]
                },
                {
                    "name": "heroImage",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "https://images.unsplash.com/photo-1522071820081-009f0129c71c?w=400"
                    ]
                },
                {
                    "name": "body",
                    "type": "long-text",
                    "multiple": false,
                    "locked": false,
                    "mimeType": "text/html",
                    "values": [
                        "Making the switch to Linear can transform how your team builds software. Unlike traditional project management tools that feel like spreadsheets, Linear is purpose-built for modern software teams who value speed and clarity. The migration process starts with understanding what makes Linear different: it's keyboard-first, lightning-fast, and designed around the way developers actually work. Begin by mapping your existing workflow—identify your current project structure, issue types, and workflows. Linear's import tools support most major platforms including Jira, GitHub Issues, and Asana. Before importing, clean up your backlog. This is your chance to archive completed work and consolidate duplicate issues. When setting up Linear, start simple. Create a basic project structure and customize as you go rather than trying to replicate every feature from your old tool. Linear's strength is in its simplicity: issues, projects, cycles, and roadmaps. Train your team on keyboard shortcuts early—they're game-changers for productivity. Set up integrations with GitHub or GitLab to automatically link pull requests to issues. Configure Slack notifications thoughtfully to avoid overwhelming your team. Use Linear's views and filters to create custom perspectives for different roles. Developers might focus on their assigned issues, while product managers track epics across teams. The key to successful migration is momentum: get your team using Linear for new work immediately rather than waiting for a perfect setup. Linear's opinionated approach means less configuration and more building. Your team will appreciate the speed."
                    ]
                },
                {
                    "name": "tags",
                    "type": "tag",
                    "multiple": true,
                    "locked": false,
                    "values": [
                        "blog:Design",
                        "blog:Research"
                    ]
                },
                {
                    "name": "readingTimeMinutes",
                    "type": "number",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        7
                    ]
                },
                {
                    "name": "category",
                    "type": "enumeration",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Product"
                    ]
                }
            ],
            "variations": [],
            "tags": [],
            "references": [],
            "model": {
                "id": "L2NvbmYvZ2xvYmFsL3NldHRpbmdzL2RhbS9jZm0vbW9kZWxzL2Jsb2ctYXJ0aWNsZQ",
                "path": "/conf/global/settings/dam/cfm/models/blog-article",
                "name": "Blog Article",
                "title": "Blog Article",
                "description": "Content Fragment Model for blog posts used by THE BLOG site."
            },
            "validationStatus": [],
            "fieldTags": [
                {
                    "id": "blog:Design",
                    "i18n": []
                },
                {
                    "id": "blog:Research",
                    "i18n": []
                }
            ],
            "etag": "\"53802c0b5e276ffbd53ca1a5ec2d2ab4\""
        },
        {
            "path": "/content/dam/the-blog/articles/building-your-api-stack",
            "title": "Building your API Stack",
            "description": "Choosing the right tools for creating, testing, and managing APIs.",
            "id": "99372dc8-faef-4256-8bcb-526f335576b8",
            "created": {
                "at": "2025-10-22T15:18:56.846Z",
                "by": "kkalanta@adobe.com",
                "fullName": "Karolis Kalanta"
            },
            "modified": {
                "at": "2025-10-22T15:18:56.912Z",
                "by": "kkalanta@adobe.com",
                "fullName": "Karolis Kalanta"
            },
            "status": "DRAFT",
            "fields": [
                {
                    "name": "title",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Building your API Stack"
                    ]
                },
                {
                    "name": "author",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Editorial Team"
                    ]
                },
                {
                    "name": "publishedDate",
                    "type": "date",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "2023-01-03"
                    ]
                },
                {
                    "name": "heroImage",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "https://images.unsplash.com/photo-1460925895917-afdab827c52f?w=400"
                    ]
                },
                {
                    "name": "body",
                    "type": "long-text",
                    "multiple": false,
                    "locked": false,
                    "mimeType": "text/html",
                    "values": [
                        "Building a robust API stack requires thoughtful selection of tools across the entire lifecycle. The explosion of API-first development has brought an equally impressive array of tooling, making the choice both exciting and overwhelming. Start with API design tools like Swagger Editor or Stoplight Studio that let you define your API contract before writing code. These tools use OpenAPI specifications to create documentation that serves as a single source of truth. For development, consider API gateway solutions like Kong or AWS API Gateway that handle authentication, rate limiting, and request routing. Testing is critical—Postman and Insomnia are excellent for manual testing and can automate test suites. For more rigorous testing, integrate tools like REST Assured or Karate that enable BDD-style API tests. Monitoring and observability separate good APIs from great ones. Tools like DataDog, New Relic, or the open-source Grafana stack help you understand API performance, error rates, and usage patterns. Don't overlook API documentation—tools like Redoc or Stoplight Elements create beautiful, interactive documentation from your OpenAPI spec. Version control your API specifications alongside your code. Consider tools like Spectral for linting API designs to enforce consistency and best practices across teams. For teams managing multiple APIs, an API catalog tool helps developers discover and reuse existing endpoints. Security scanning tools like OWASP ZAP should be part of your CI/CD pipeline. The best stack is one that integrates well—look for tools that work together rather than creating silos. Start small, prove value, then expand your tooling as needs grow."
                    ]
                },
                {
                    "name": "tags",
                    "type": "tag",
                    "multiple": true,
                    "locked": false,
                    "values": [
                        "blog:Design",
                        "blog:Research"
                    ]
                },
                {
                    "name": "readingTimeMinutes",
                    "type": "number",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        8
                    ]
                },
                {
                    "name": "category",
                    "type": "enumeration",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Tools"
                    ]
                }
            ],
            "variations": [],
            "tags": [],
            "references": [],
            "model": {
                "id": "L2NvbmYvZ2xvYmFsL3NldHRpbmdzL2RhbS9jZm0vbW9kZWxzL2Jsb2ctYXJ0aWNsZQ",
                "path": "/conf/global/settings/dam/cfm/models/blog-article",
                "name": "Blog Article",
                "title": "Blog Article",
                "description": "Content Fragment Model for blog posts used by THE BLOG site."
            },
            "validationStatus": [],
            "fieldTags": [
                {
                    "id": "blog:Design",
                    "i18n": []
                },
                {
                    "id": "blog:Research",
                    "i18n": []
                }
            ],
            "etag": "\"5cfc2025ba977c448bf6f515009482f8\""
        },
        {
            "path": "/content/dam/the-blog/articles/grid-system-for-better-design-user-interface",
            "title": "Grid system for better Design User Interface",
            "description": "Using grid systems to create consistent, scannable layouts across devices.",
            "id": "46116113-e016-4494-a8bd-a9c5d4161e6c",
            "created": {
                "at": "2025-10-22T15:18:58.634Z",
                "by": "kkalanta@adobe.com",
                "fullName": "Karolis Kalanta"
            },
            "modified": {
                "at": "2025-10-22T15:18:58.643Z",
                "by": "kkalanta@adobe.com",
                "fullName": "Karolis Kalanta"
            },
            "status": "DRAFT",
            "fields": [
                {
                    "name": "title",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Grid system for better Design User Interface"
                    ]
                },
                {
                    "name": "author",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Editorial Team"
                    ]
                },
                {
                    "name": "publishedDate",
                    "type": "date",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "2023-01-04"
                    ]
                },
                {
                    "name": "heroImage",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "https://images.unsplash.com/photo-1586717791821-3f44a563fa4c?w=600"
                    ]
                },
                {
                    "name": "body",
                    "type": "long-text",
                    "multiple": false,
                    "locked": false,
                    "mimeType": "text/html",
                    "values": [
                        "A grid system is a design tool used to arrange content on a webpage through a series of vertical and horizontal lines that create a matrix of intersecting points for aligning page elements. Just as city grids help people navigate urban spaces, webpage grids provide structure that guides both users and designers. Grids create consistency across a website and make layouts more visually appealing and easier to navigate. Three elements make up any grid: columns, gutters, and margins. Columns take up most of the real estate and contain your elements and content. Column widths are generally defined with percentages to adapt to any screen size, and the number varies by device—a mobile grid might have four columns while desktop uses twelve. Gutters are the spaces between columns that visually separate elements. Gutter widths are typically fixed values but change at different breakpoints—wider for large screens, narrower for mobile. Margins are the spaces on the left and right edges of the grid. Three grid types dominate web interfaces: column grids divide a page into vertical columns for alignment; modular grids add rows creating modules for repeatable content like product listings; hierarchical grids organize content by importance with key elements taking the biggest portions. Grids benefit everyone: designers can quickly assemble well-aligned interfaces, users can scan predictable layouts easily, and responsive design relies on grids adapting across breakpoints. When setting up your grid, choose the type that fits your content, determine column counts for each breakpoint, and always place content within columns, never gutters. Consider using an 8-pixel grid system since most device screen sizes are multiples of eight."
                    ]
                },
                {
                    "name": "tags",
                    "type": "tag",
                    "multiple": true,
                    "locked": false,
                    "values": [
                        "blog:Design",
                        "blog:Interface"
                    ]
                },
                {
                    "name": "readingTimeMinutes",
                    "type": "number",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        9
                    ]
                },
                {
                    "name": "category",
                    "type": "enumeration",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Interface"
                    ]
                }
            ],
            "variations": [],
            "tags": [],
            "references": [],
            "model": {
                "id": "L2NvbmYvZ2xvYmFsL3NldHRpbmdzL2RhbS9jZm0vbW9kZWxzL2Jsb2ctYXJ0aWNsZQ",
                "path": "/conf/global/settings/dam/cfm/models/blog-article",
                "name": "Blog Article",
                "title": "Blog Article",
                "description": "Content Fragment Model for blog posts used by THE BLOG site."
            },
            "validationStatus": [],
            "fieldTags": [
                {
                    "id": "blog:Design",
                    "i18n": []
                },
                {
                    "id": "blog:Interface",
                    "i18n": []
                }
            ],
            "etag": "\"8dad554e04df1c4e8253f75aeb4ba5cd\""
        },
        {
            "path": "/content/dam/the-blog/articles/bill-walsh-leadership-lessons",
            "title": "Bill Walsh leadership lessons",
            "description": "Turning a 2–14 team into a dynasty: leadership principles that scale.",
            "id": "e8084534-7d1c-4188-a3ba-3640340f3371",
            "created": {
                "at": "2025-10-22T15:19:00.943Z",
                "by": "kkalanta@adobe.com",
                "fullName": "Karolis Kalanta"
            },
            "modified": {
                "at": "2025-10-22T15:19:00.953Z",
                "by": "kkalanta@adobe.com",
                "fullName": "Karolis Kalanta"
            },
            "status": "DRAFT",
            "fields": [
                {
                    "name": "title",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Bill Walsh leadership lessons"
                    ]
                },
                {
                    "name": "author",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Editorial Team"
                    ]
                },
                {
                    "name": "publishedDate",
                    "type": "date",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "2023-01-05"
                    ]
                },
                {
                    "name": "heroImage",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "https://images.unsplash.com/photo-1519389950473-47ba0277781c?w=400"
                    ]
                },
                {
                    "name": "body",
                    "type": "long-text",
                    "multiple": false,
                    "locked": false,
                    "mimeType": "text/html",
                    "values": [
                        "Bill Walsh transformed the San Francisco 49ers from a struggling 2-14 team into a dynasty with three Super Bowl victories, establishing leadership principles that transcend sports. His approach wasn't about motivational speeches—it was about building systems, setting standards, and creating a culture of excellence that sustained itself. Walsh believed that the score takes care of itself when you focus on the process. He created detailed scripts for every practice, every meeting, and even the first 15 plays of each game. This meticulous preparation removed uncertainty and allowed his team to execute under pressure. For product teams, this translates to building repeatable processes, documenting decisions, and creating playbooks that new team members can follow. Walsh's standard of performance applied to everyone, from star quarterbacks to equipment managers. He believed that tolerating mediocrity anywhere in the organization undermines excellence everywhere. In product organizations, this means holding the same bar for code quality, design craft, and customer support—no exceptions. Walsh invested heavily in developing people, seeing potential where others saw limitations. He promoted from within and created pathways for growth. Modern product leaders can learn from his commitment to mentorship and creating opportunities for team members to stretch into new roles. Perhaps Walsh's most important lesson is about resilience and long-term thinking. He didn't panic after losses or become complacent after wins. He stayed focused on the fundamentals, trusting that consistent execution of core principles would lead to success. This patience and commitment to process over outcomes is exactly what product teams need when facing setbacks or pressure for short-term results."
                    ]
                },
                {
                    "name": "tags",
                    "type": "tag",
                    "multiple": true,
                    "locked": false,
                    "values": [
                        "blog:Management",
                        "blog:Leadership"
                    ]
                },
                {
                    "name": "readingTimeMinutes",
                    "type": "number",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        5
                    ]
                },
                {
                    "name": "category",
                    "type": "enumeration",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Product"
                    ]
                }
            ],
            "variations": [],
            "tags": [],
            "references": [],
            "model": {
                "id": "L2NvbmYvZ2xvYmFsL3NldHRpbmdzL2RhbS9jZm0vbW9kZWxzL2Jsb2ctYXJ0aWNsZQ",
                "path": "/conf/global/settings/dam/cfm/models/blog-article",
                "name": "Blog Article",
                "title": "Blog Article",
                "description": "Content Fragment Model for blog posts used by THE BLOG site."
            },
            "validationStatus": [],
            "fieldTags": [
                {
                    "id": "blog:Leadership",
                    "i18n": []
                },
                {
                    "id": "blog:Management",
                    "i18n": []
                }
            ],
            "etag": "\"da6099f2e9c2a622d1a357a8226a7ef8\""
        },
        {
            "path": "/content/dam/the-blog/articles/pm-mental-models",
            "title": "PM mental models",
            "description": "Simple expressions of complex processes and relationships in product work.",
            "id": "81368b28-c37d-46f3-a1eb-e03fb05f39b1",
            "created": {
                "at": "2025-10-22T15:19:02.85Z",
                "by": "kkalanta@adobe.com",
                "fullName": "Karolis Kalanta"
            },
            "modified": {
                "at": "2025-10-22T15:19:02.86Z",
                "by": "kkalanta@adobe.com",
                "fullName": "Karolis Kalanta"
            },
            "status": "DRAFT",
            "fields": [
                {
                    "name": "title",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "PM mental models"
                    ]
                },
                {
                    "name": "author",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Editorial Team"
                    ]
                },
                {
                    "name": "publishedDate",
                    "type": "date",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "2023-01-06"
                    ]
                },
                {
                    "name": "heroImage",
                    "type": "text",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "https://images.unsplash.com/photo-1531545514256-b1400bc00f31?w=400"
                    ]
                },
                {
                    "name": "body",
                    "type": "long-text",
                    "multiple": false,
                    "locked": false,
                    "mimeType": "text/html",
                    "values": [
                        "Mental models are simple expressions of complex processes that help product managers navigate ambiguity and make better decisions. These thinking frameworks act as shortcuts, allowing you to quickly process information and respond effectively to challenges. The Eisenhower Matrix helps prioritize by separating urgent from important, preventing the tyranny of the urgent from consuming your roadmap. Important but not urgent work—like technical debt or strategic initiatives—often delivers the most value but gets perpetually postponed without this framework. The RICE scoring model (Reach, Impact, Confidence, Effort) provides a structured approach to prioritization that reduces bias and creates alignment across stakeholders. By quantifying these dimensions, teams can have data-informed discussions rather than opinion battles. First principles thinking encourages breaking down problems to fundamental truths and building up from there, especially valuable when entering new markets or solving novel problems. Instead of reasoning by analogy, you identify what must be true and work forward. The Jobs-to-be-Done framework shifts focus from demographics to customer motivations—what job is the customer hiring your product to do? This lens reveals opportunities competitors miss. Reversible versus irreversible decisions, a mental model from Jeff Bezos, helps determine how much analysis to invest. One-way doors require careful deliberation; two-way doors should be opened quickly. The 80/20 principle reminds us that 80% of outcomes come from 20% of efforts—identifying and focusing on that critical 20% multiplies impact. Compound these models: use first principles to understand a space, Jobs-to-be-Done to identify opportunities, RICE to prioritize, and Eisenhower to execute. Mental models don't guarantee success, but they dramatically improve your odds."
                    ]
                },
                {
                    "name": "tags",
                    "type": "tag",
                    "multiple": true,
                    "locked": false,
                    "values": [
                        "blog:Frameworks",
                        "blog:Product",
                        "blog:Research"
                    ]
                },
                {
                    "name": "readingTimeMinutes",
                    "type": "number",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        6
                    ]
                },
                {
                    "name": "category",
                    "type": "enumeration",
                    "multiple": false,
                    "locked": false,
                    "values": [
                        "Product"
                    ]
                }
            ],
            "variations": [],
            "tags": [],
            "references": [],
            "model": {
                "id": "L2NvbmYvZ2xvYmFsL3NldHRpbmdzL2RhbS9jZm0vbW9kZWxzL2Jsb2ctYXJ0aWNsZQ",
                "path": "/conf/global/settings/dam/cfm/models/blog-article",
                "name": "Blog Article",
                "title": "Blog Article",
                "description": "Content Fragment Model for blog posts used by THE BLOG site."
            },
            "validationStatus": [],
            "fieldTags": [
                {
                    "id": "blog:Product",
                    "i18n": []
                },
                {
                    "id": "blog:Research",
                    "i18n": []
                },
                {
                    "id": "blog:Frameworks",
                    "i18n": []
                }
            ],
            "etag": "\"227dd50cabbfffd656075a83fea5cba0\""
        }
    ]
}